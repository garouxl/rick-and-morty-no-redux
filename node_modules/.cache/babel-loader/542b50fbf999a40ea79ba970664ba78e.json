{"ast":null,"code":"import _slicedToArray from \"/home/vrx_lasiqueira/Workspace/leandroaps/replacing-redux-with-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/vrx_lasiqueira/Workspace/leandroaps/replacing-redux-with-hooks/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/vrx_lasiqueira/Workspace/leandroaps/replacing-redux-with-hooks/src/Store.js\";\nimport React from 'react';\nexport const Store = React.createContext();\nconst initialState = {\n  episodes: [],\n  favourites: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return _objectSpread({}, state, {\n        episodes: action.payload\n      });\n\n    case 'ADD_FAV':\n      return _objectSpread({}, state, {\n        favourites: [...state.favourites, action.payload]\n      });\n\n    case 'REMOVE_FAV':\n      return _objectSpread({}, state, {\n        favourites: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        state = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const value = {\n    state,\n    dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/home/vrx_lasiqueira/Workspace/leandroaps/replacing-redux-with-hooks/src/Store.js"],"names":["React","Store","createContext","initialState","episodes","favourites","reducer","state","action","type","payload","StoreProvider","props","useReducer","dispatch","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,EAAd;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,+BAAYF,KAAZ;AAAmBH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAApC;;AACF,SAAK,SAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAV,EAAsBG,MAAM,CAACE,OAA7B;AAFd;;AAIF,SAAK,YAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFrB;;AAIF;AACE,aAAOH,KAAP;AAdJ;AAgBD;;AAED,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,4BACTZ,KAAK,CAACa,UAAN,CAAiBP,OAAjB,EAA0BH,YAA1B,CADS;AAAA;AAAA,QAC5BI,KAD4B;AAAA,QACrBO,QADqB;;AAEnC,QAAMC,KAAK,GAAG;AAAER,IAAAA,KAAF;AAASO,IAAAA;AAAT,GAAd;AACA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BH,KAAK,CAACI,QAArC,CAAP;AACD","sourcesContent":["import React from 'react';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  episodes: [],\n  favourites: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return { ...state, episodes: action.payload };\n    case 'ADD_FAV':\n      return {\n        ...state,\n        favourites: [...state.favourites, action.payload]\n      };\n    case 'REMOVE_FAV':\n      return {\n        ...state,\n        favourites: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}